apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'com.github.johnrengelman.shadow'

def projectName = 'islandora-syn'
def projectVersion = '0.1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

def tomcatVersion = '8.0.28'

ext {

	versions = [
		bcprov : '1.56',
		jackson : '2.9.2',
		javaJwt : '3.1.0',
		junit : '4.12',
		logback : '1.0.13',
		mockito : '2.7.14',
		servlet : '3.0.1',
		slf4j : '1.7.12'
	]
}

checkstyle {
    configFile = rootProject.file('gradle/checkstyle/checkstyle.xml')
    configProperties.checkstyleConfigDir = rootProject.file('gradle/checkstyle')
}

repositories {
     maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    compile group: 'com.auth0', name: 'java-jwt', version: versions.javaJwt
    compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: versions.bcprov
    compile group: 'org.slf4j', name: 'slf4j-api', version: versions.slf4j
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: versions.servlet
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jackson
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: versions.jackson

    testRuntime group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback
	
    testCompile group: 'junit', name: 'junit', version: versions.junit
    testCompile group: 'org.mockito', name: 'mockito-core', version: versions.mockito
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
    }
}

jar {
    baseName = projectName
    version = projectVersion
    manifest {
        attributes("Implementation-Title": baseName,
            "Implementation-Version": version,
            "Implementation-Vendor": "Islandora",
            "Class-Path": configurations.compile.collect { it.getName() }.join(' '))
    }

}

shadowJar {
    baseName = projectName
    version = projectVersion
}

assemble.dependsOn(shadowJar);

test {
   testLogging {
        // Make sure output from
        // standard out or error is shown
        // in Gradle output.
        // showStandardStreams = true
        //events 'standard_out'
        exceptionFormat = 'full'
    }
}